module tb;
  task automatic arr(ref bit [2:0]a[8]);
    //here [2:0] indicates the size of array
    //a[8] indicates the no. of elements in the array
    for (int i=0;i<=7;i=i+1) begin
      a[i]=i;
    end
  endtask
  bit[2:0]a[8];
  initial begin
    arr(a);
    for(int i=0;i<=7;i=i+1) begin
      $display("a[%0d]=%0d",i,a[i]);
    end
  end
endmodule
//Whenever we use pass by refernce the output will be modified so the values of will be updated.
KERNEL: a[0]=0
# KERNEL: a[1]=1
# KERNEL: a[2]=2
# KERNEL: a[3]=3
# KERNEL: a[4]=4
# KERNEL: a[5]=5
# KERNEL: a[6]=6
# KERNEL: a[7]=7

// Code your testbench here
// or browse Examples
module tb;
  task arr(input bit [2:0]a[8]);
    //here [2:0] indicates the size of array
    //a[8] indicates the no. of elements in the array
    for (int i=0;i<=7;i=i+1) begin
      a[i]=i;
    end
  endtask
  bit[2:0]a[8];
  initial begin
    arr(a);
    for(int i=0;i<=7;i=i+1) begin
      $display("a[%0d]=%0d",i,a[i]);
    end
  end
endmodule
//Whenever we use input at task arguments it will represent pass by value so the first value of i i.e 0 will be copied to all array values.
 KERNEL: a[0]=0
# KERNEL: a[1]=0
# KERNEL: a[2]=0
# KERNEL: a[3]=0
# KERNEL: a[4]=0
# KERNEL: a[5]=0
# KERNEL: a[6]=0
# KERNEL: a[7]=0
