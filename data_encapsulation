class parent;
  int a=10;
  int b=7;
  function void print();
    $display("a=%0d,b=%0d",a,b);
  endfunction
endclass
class child extends parent();
  int c;
  function void sub();
    c=a-b;
    $display("c=%0d",c);
  endfunction
endclass
module tb;
  int d;
  child c;
  initial begin 
    c=new();
    c.sub();
    c.print();
    d=a;
    $display("d=%0d",d);
  end
endmodule
Output:
c=3
a=10 b=7
d=10

//Whenever we dont use any keyword in front of class properties it will treat as Global/public variables which can be accessed in class, In child class and in module also


class parent;
  int a=10;
  int b=7;
  function void print();
    $display("a=%0d,b=%0d",a,b);
  endfunction
endclass
class child extends parent();
  int c;
  function void sub();
    c=a-b;
    $display("c=%0d",c);
  endfunction
endclass
module tb;
  int d;
  child c;
  initial begin 
    c=new();
    c.sub();
    c.print();
  end
endmodule


Output:
ERROR VCP5248 "Cannot access local/protected member ""a"" from this scope." "testbench.sv" 11  8
ERROR VCP5248 "Cannot access local/protected member ""b"" from this scope." "testbench.sv" 11  10
 // Whenever we use local before the properties of class it will only restricted to that class only .Other classes wouldn't access the properties from the restricted class

class parent;
  protected int a=10;
  protected int b=7;
  function void print();
    $display("a=%0d,b=%0d",a,b);
  endfunction
endclass
class child extends parent();
  int c;
  function void sub();
    c=a-b;
    $display("c=%0d",c);
  endfunction
endclass
module tb;
  int d;
  child c;
  initial begin 
    c=new();
    c.sub();
    c.print();
    d=a;
    $display("d=%0d",d);
  end
endmodule

Output:
ERROR VCP5103 "Undeclared identifier: a." "testbench.sv" 22  8
Whenever we use protected keyword in parent class properties ,then  it can access properties in child class and parent class only.Other independent class cant be accesses.
