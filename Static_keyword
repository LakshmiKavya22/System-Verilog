class parent;
  int a=10;
  int b=20;
  function void print();
    $display("a=%0d,b=%0d",a,b);
  endfunction
endclass
class child extends parent;
  int c;
  function void add();
    c=a+b;
    $display("c=%0d",c);
  endfunction
endclass
module tb;
  child c1,c2;
  initial begin
    c1=new();
    c2=new();
    c1.print();
    c2.print();
    c1.a=30;
    c2.b=22;
    c1.print();
    c2.print();
  end
endmodule

KERNEL: ASDB file was created in location /home/runner/dataset.asdb
# KERNEL: a=10,b=20
# KERNEL: a=10,b=20
# KERNEL: a=30,b=20
# KERNEL: a=10,b=22

This is non static class in which separatecopies are created for different objects.
Non Static class memebers can be accessed by using object handles only.



class parent;
  static int a=10;
  static int b=20;
  function void print();
    $display("a=%0d,b=%0d",a,b);
  endfunction
endclass
class child extends parent;
  int c;
  function void add();
    c=a+b;
    $display("c=%0d",c);
  endfunction
endclass
module tb;
  child c1,c2;
  initial begin
    c1=new();
    c2=new();
    c1.print();
    c2.print();
    c1.a=30;
    c2.b=22;
    c1.print();
    c2.print();
  end
endmodule

# KERNEL: a=10,b=20
# KERNEL: a=10,b=20
# KERNEL: a=30,b=22
# KERNEL: a=30,b=22

    This is Static used class ,in this same copies are shared  for different objects.


class parent;
  static int a=10;
  static int b=20;
  function void print();
    $display("a=%0d,b=%0d",a,b);
  endfunction
endclass
class child extends parent;
  int c;
  function void add();
    c=a+b;
    $display("c=%0d",c);
  endfunction
endclass
module tb;
  child c1,c2;
  initial begin
    c1=new();
    c2=new();
    c1.print();
    c2.print();
    parent::a=30;
    parent::b=22;
    c1.print();
    c2.print();
  end
endmodule
# KERNEL: a=10,b=20
# KERNEL: a=10,b=20
# KERNEL: a=30,b=22
# KERNEL: a=30,b=22

----> In static classes the data members are accessed by object handles as well as parent class name.
     Here scope operator [::] is used in accessing data members with parent class name

    
    
